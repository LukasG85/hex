{"version":3,"sources":["img/restaurant4.jpg","hooks/useForm.js","components/form/Form.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","useForm","useState","name","preparation_time","type","value","setValue","err","setErr","e","target","preventDefault","formValidate","fetch","method","headers","body","JSON","stringify","then","response","status","console","log","json","data","Form","handleChange","handleSubmit","error","FormWrapper","Title","FormGroup","onSubmit","Input","placeholder","required","onChange","step","Select","Option","min","max","Error","Button","styled","div","h1","form","input","select","option","button","p","App","AppWrapper","bcgImage","img","props","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,yC,oZCE3C,IA4DeC,EA5DC,WAAO,IAAD,EACMC,mBAAS,CACjCC,KAAM,GACNC,iBAAkB,WAClBC,KAAM,KAJY,mBACbC,EADa,KACNC,EADM,OAOEL,oBAAS,GAPX,mBAObM,EAPa,KAORC,EAPQ,KA0DpB,MAAO,CAACH,EAjDa,SAAAI,GACnBH,E,yVAAS,CAAD,GACHD,EADG,eAELI,EAAEC,OAAOR,KAAOO,EAAEC,OAAOL,UAmCT,SAAAI,GACnBA,EAAEE,kBAhCiB,WACnB,GAA+B,aAA3BN,EAAMF,iBACR,OAAO,EAgCLS,GAKFJ,GAAO,IA9BTK,MAFY,qDAED,CACTC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUb,KAEpBc,MAAK,SAAAC,GACJ,GAAIA,EAASC,QAAU,IACrBC,QAAQC,IACNH,EAASC,OACT,0EAEG,MAAID,EAASC,QAAU,KAG5B,OAAOD,EAASI,OAFhBF,QAAQC,IAAIH,EAASC,OAAQ,4CAKhCF,MAAK,SAAAM,GAAI,OAAIH,QAAQC,IAAIE,MAQ1BjB,GAAO,GACPF,EAAS,CAAEJ,KAAM,GAAIC,iBAAkB,WAAYC,KAAM,OAKlBG,I,svECxD7C,IAmFemB,EAnFF,WAAO,IAAD,EACkC1B,IADlC,mBACVK,EADU,KACHsB,EADG,KACWC,EADX,KACyBC,EADzB,KAGjB,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,yBACA,kBAACC,EAAD,CAAWC,SAAUL,EAAcd,OAAO,QACxC,6BACE,kBAACoB,EAAD,CACE9B,KAAK,OACLF,KAAK,OACLiC,YAAY,YACZC,UAAQ,EACR/B,MAAOA,EAAMH,KACbmC,SAAUV,IAGZ,kBAACO,EAAD,CACE9B,KAAK,OACLF,KAAK,mBACLoC,KAAK,IACLjC,MAAOA,EAAMF,iBACbkC,SAAUV,IAEZ,kBAACY,EAAD,CACErC,KAAK,OACLG,MAAOA,EAAMD,KACbiC,SAAUV,EACVS,UAAQ,GAER,kBAACI,EAAD,CAAQnC,MAAM,IAAd,QACA,kBAACmC,EAAD,CAAQnC,MAAM,SAAd,SACA,kBAACmC,EAAD,CAAQnC,MAAM,QAAd,QACA,kBAACmC,EAAD,CAAQnC,MAAM,YAAd,aAGc,UAAfA,EAAMD,KACL,6BACE,kBAAC8B,EAAD,CACE9B,KAAK,SACLF,KAAK,eACLiC,YAAY,mBACZC,UAAQ,EACRC,SAAUV,IAEZ,kBAACO,EAAD,CACE9B,KAAK,SACLF,KAAK,WACLiC,YAAY,WACZG,KAAK,MACLF,UAAQ,EACRC,SAAUV,KAGZ,KACY,SAAftB,EAAMD,KACL,kBAAC8B,EAAD,CACE9B,KAAK,SACLF,KAAK,kBACLiC,YAAY,uBACZM,IAAI,IACJC,IAAI,KACJN,UAAQ,EACRC,SAAUV,IAEV,KACY,aAAftB,EAAMD,KACL,kBAAC8B,EAAD,CACE9B,KAAK,SACLF,KAAK,kBACLiC,YAAY,4BACZC,UAAQ,EACRC,SAAUV,IAEV,MAELE,GAAS,kBAACc,EAAD,+BACV,kBAACC,EAAD,CAAQxC,KAAK,UAAb,WAQF0B,EAAce,IAAOC,IAAV,KAgBXf,EAAQc,IAAOE,GAAV,KAqBLf,EAAYa,IAAOG,KAAV,KAOTd,EAAQW,IAAOI,MAAV,KAeLV,EAASM,IAAOK,OAAV,KAeNV,EAASK,IAAOM,OAAV,KAINP,EAASC,IAAOO,OAAV,KAgBNT,EAAQE,IAAOQ,EAAV,K,iSCzKIC,MARf,WACE,OACE,kBAACC,EAAD,CAAYC,SAAUC,KACpB,kBAAC,EAAD,QAOAF,EAAaV,IAAOC,IAAV,KAON,SAAAY,GAAK,OAAIA,EAAMF,YCXLG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnD,MAAK,SAAAoD,GACjCA,EAAaC,kB","file":"static/js/main.85a0713d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/restaurant4.3f65978f.jpg\";","import { useState } from \"react\";\r\n\r\nconst useForm = () => {\r\n  const [value, setValue] = useState({\r\n    name: \"\",\r\n    preparation_time: \"00:00:00\",\r\n    type: \"\"\r\n  });\r\n\r\n  const [err, setErr] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    setValue({\r\n      ...value,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const formValidate = () => {\r\n    if (value.preparation_time !== \"00:00:00\") {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const sendDish = () => {\r\n    const url = \"https://frosty-wood-6558.getsandbox.com:443/dishes\";\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(value)\r\n    })\r\n      .then(response => {\r\n        if (response.status >= 500) {\r\n          console.log(\r\n            response.status,\r\n            \"Server errors. Something went wrong. The server is not responding.\"\r\n          );\r\n        } else if (response.status >= 400) {\r\n          console.log(response.status, \"Client errors. Something went wrong.\");\r\n        } else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => console.log(data));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValidate()) {\r\n      sendDish();\r\n      setErr(false);\r\n      setValue({ name: \"\", preparation_time: \"00:00:00\", type: \"\" });\r\n    } else {\r\n      setErr(true);\r\n    }\r\n  };\r\n  return [value, handleChange, handleSubmit, err];\r\n};\r\nexport default useForm;\r\n","import React from \"react\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Form = () => {\r\n  const [value, handleChange, handleSubmit, error] = useForm();\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <Title>choose your dish</Title>\r\n      <FormGroup onSubmit={handleSubmit} method=\"POST\">\r\n        <div>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Dish name\"\r\n            required\r\n            value={value.name}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <Input\r\n            type=\"time\"\r\n            name=\"preparation_time\"\r\n            step=\"2\"\r\n            value={value.preparation_time}\r\n            onChange={handleChange}\r\n          />\r\n          <Select\r\n            name=\"type\"\r\n            value={value.type}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <Option value=\"\">Type</Option>\r\n            <Option value=\"pizza\">Pizza</Option>\r\n            <Option value=\"soup\">Soup</Option>\r\n            <Option value=\"sandwich\">Sandwich</Option>\r\n          </Select>\r\n\r\n          {value.type === \"pizza\" ? (\r\n            <div>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"no_of_slices\"\r\n                placeholder=\"Number of slices\"\r\n                required\r\n                onChange={handleChange}\r\n              />\r\n              <Input\r\n                type=\"number\"\r\n                name=\"diameter\"\r\n                placeholder=\"Diameter\"\r\n                step=\"0.1\"\r\n                required\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {value.type === \"soup\" ? (\r\n            <Input\r\n              type=\"number\"\r\n              name=\"spiciness_scale\"\r\n              placeholder=\"Spiciness scale 1-10\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              required\r\n              onChange={handleChange}\r\n            />\r\n          ) : null}\r\n          {value.type === \"sandwich\" ? (\r\n            <Input\r\n              type=\"number\"\r\n              name=\"slices_of_bread\"\r\n              placeholder=\"Number of slices of bread\"\r\n              required\r\n              onChange={handleChange}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        {error && <Error>Enter preparation time</Error>}\r\n        <Button type=\"submit\">Send</Button>\r\n      </FormGroup>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n\r\nconst FormWrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding-top: 50px;\r\n  background-color: rgba(30, 30, 30, 0.95);\r\n  font-family: Roboto sans-serif;\r\n  @media (min-width: 576px) {\r\n    width: 400px;\r\n    margin-left: 15vw;\r\n  }\r\n  @media (min-width: 768px) {\r\n    margin-left: 15vw;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  position: relative;\r\n  padding-bottom: 30px;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  text-transform: capitalize;\r\n  font-size: 2rem;\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 1px;\r\n    width: 50%;\r\n    bottom: 0;\r\n    right: 50%;\r\n    transform: translateX(50%);\r\n    background-color: #ffffff;\r\n  }\r\n  @media (min-width: 576px) {\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\nconst FormGroup = styled.form`\r\n  height: 70%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding-top: 100px;\r\n`;\r\nconst Input = styled.input`\r\n  display: block;\r\n  width: 80%;\r\n  margin: 25px auto 0;\r\n  background-color: transparent;\r\n  height: 30px;\r\n  border: none;\r\n  border-bottom: 1px solid #ffffff;\r\n  color: #ffffff;\r\n  font-size: 1.2rem;\r\n  &::placeholder {\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  display: block;\r\n  width: 80%;\r\n  margin: 25px auto 0;\r\n  background-color: transparent;\r\n  height: 30px;\r\n  border: none;\r\n  border-bottom: 1px solid #ffffff;\r\n  color: #ffffff;\r\n  font-size: 1.2rem;\r\n  &option {\r\n    background-color: rgba(30, 30, 30, 0.95);\r\n  }\r\n`;\r\n\r\nconst Option = styled.option`\r\n  background-color: rgba(30, 30, 30, 0.95);\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 45px;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  background-color: transparent;\r\n  border: 2px solid #ffffff;\r\n  font-size: 1.5rem;\r\n  color: #ffffff;\r\n  transition: 0.3s ease-in-out;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #ffffff;\r\n    color: rgb(30, 30, 30);\r\n  }\r\n`;\r\n\r\nconst Error = styled.p`\r\n  text-align: center;\r\n  color: red;\r\n  font-size: 20px;\r\n`;\r\n","import React from \"react\";\nimport Form from \"./form/Form\";\nimport \"../App.css\";\nimport styled from \"styled-components\";\nimport img from \"../img/restaurant4.jpg\";\n\nfunction App() {\n  return (\n    <AppWrapper bcgImage={img}>\n      <Form />\n    </AppWrapper>\n  );\n}\n\nexport default App;\n\nconst AppWrapper = styled.div`\n  height: 100vh;\n  background: linear-gradient(\n      0deg,\n      rgba(30, 30, 30, 0.5),\n      rgba(30, 30, 30, 0.5)\n    ),\n    url(${props => props.bcgImage}) no-repeat top center;\n  background-size: cover;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}